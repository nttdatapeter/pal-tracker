version: 2
jobs:
  build:
    docker:
      - image: 'microsoft/dotnet:2.1-sdk'
        environment:
          DEBIAN_FRONTEND: "noninteractive"
    steps:
      - checkout
      - run:
          name: Install MySQL
          command: |
            apt-get update
            apt-get -y install mysql-server
            service mysql start

            # Wait for MySQL to start
            sleep 5

      - run:
          name: Install flyway
          command: |
            curl https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/5.1.1/flyway-commandline-5.1.1-linux-x64.tar.gz | tar xvz

      - run:
          name: Create test database and migrate
          command: |
            mysql -uroot < databases/tracker/create_databases.sql
            flyway-*/flyway -url="jdbc:mysql://localhost:3306/tracker_dotnet_test" -locations=filesystem:databases/tracker -user=tracker_dotnet -password=password clean migrate

      - run:
          name: Test and build
          command: | 
            chmod u+x ./scripts/build.sh
            ./scripts/build.sh $CIRCLE_SHA1 

      - store_artifacts:
          path: artifacts

      - persist_to_workspace:
          root: artifacts
          paths:
            - pal-tracker-*.tgz

  deployToReview:
    docker:
      - image: 'microsoft/dotnet:2.1-sdk'
        environment:
          DEBIAN_FRONTEND: "noninteractive"
          EXTRACT_DEST: /tmp/extracted-archive
          ENVIRONMENT: review
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: Install CF CLI
          command: |
            apt-get update
            apt-get -y install apt-transport-https ca-certificates
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            apt-get update
            apt-get install cf-cli

      - run:
          name: Install jq
          command: |
            apt-get -y install jq

      - run:
          name: Install flyway
          command: |
            curl https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/5.1.1/flyway-commandline-5.1.1-linux-x64.tar.gz | tar xvz

      - run:
          name: Unzip artifacts
          command: |
            mkdir -p $EXTRACT_DEST
            tar -xvzf artifacts/pal-tracker-$CIRCLE_SHA1.tgz -C $EXTRACT_DEST

      - run:
          name: Deploy
          command: |
            cd $EXTRACT_DEST

            cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $ENVIRONMENT
            cf push -f manifest-$ENVIRONMENT.yml
            chmod u+x ./migrate-databases.sh
            ./migrate-databases.sh pal-tracker . /root/project

  deployToProd:
    docker:
      - image: 'microsoft/dotnet:2.1-sdk'
        environment:
          DEBIAN_FRONTEND: "noninteractive"
          EXTRACT_DEST: /tmp/extracted-archive
          ENVIRONMENT: production
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: Install CF CLI
          command: |
            apt-get update
            apt-get -y install apt-transport-https ca-certificates
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            apt-get update
            apt-get install cf-cli

      - run:
          name: Install jq
          command: |
            apt-get -y install jq

      - run:
          name: Install flyway
          command: |
            curl https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/5.1.1/flyway-commandline-5.1.1-linux-x64.tar.gz | tar xvz

      - run:
          name: Unzip artifacts
          command: |
            mkdir -p $EXTRACT_DEST
            tar -xvzf artifacts/pal-tracker-$CIRCLE_SHA1.tgz -C $EXTRACT_DEST

      - run:
          name: Deploy
          command: |
            cd $EXTRACT_DEST

            cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $ENVIRONMENT
            cf push -f manifest-$ENVIRONMENT.yml
            chmod u+x ./migrate-databases.sh
            ./migrate-databases.sh pal-tracker . /root/project

workflows:
  version: 2
  deployment-pipeline:
    jobs:
      - build
      - deployToReview:
          requires:
          - build
      - canDeployToProduction:
          type: approval
          requires:
           - deployToReview
      - deployToProd:
          requires:
            - canDeployToProduction
